<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-08-11T19:01:17+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">ZanyMonk</title><subtitle>Yet another blog about information security written by a lazy dude who enjoys the web a lil too much and too often.</subtitle><entry><title type="html">HTB - Sea</title><link href="http://localhost:4000/2024/08/11/htb-sea.html" rel="alternate" type="text/html" title="HTB - Sea" /><published>2024-08-11T00:00:00+02:00</published><updated>2024-08-11T00:00:00+02:00</updated><id>http://localhost:4000/2024/08/11/htb-sea</id><content type="html" xml:base="http://localhost:4000/2024/08/11/htb-sea.html"><![CDATA[<p><a href="https://app.hackthebox.com/machines/620">This machine</a> is made by FisMatHack and was released on the 10th of August 2024.</p>

<h1 id="user">User</h1>
<h2 id="foothold">Foothold</h2>
<h4 id="nmap">NMAP</h4>
<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">PORT   STATE SERVICE</span>
<span class="s">22/tcp open  ssh</span>
<span class="s">80/tcp open  http</span>
</code></pre></div></div>
<h4 id="files">Files</h4>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- /index.php
- /contact.php
- /data/
- /plugins/
- /themes/
- /messages/

# Probably using Apache's URL Rewriting feature
- /home               &gt; /index.php?page=home
- /how-to-participate &gt; /index.php?page=how-to-participate
</code></pre></div></div>

<p>Even though the <code class="language-plaintext highlighter-rouge">plugins</code> and <code class="language-plaintext highlighter-rouge">themes</code> directories clearly indicate that is indeed a CMS, I was stupid enough to ignore that and kept thinking it was all custom code.
It is only after obtaining initial access on the target that I finally realised it was using WonderCMS.</p>

<p class="secret">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
A9oRorTQ/A8Fmkb4F1pou0XyYDazmvkARhh8kSS9mnzYSoE6yQB7vyrHPwu+
m8y5ZTtpiVKzG1UIlMeAF9AY3cDUhPq/JBquWEmzULm7j73QeRJ4iqsUePTE
07EdSD0tUxclHS1cFHsyWJ3EvErNxX0tNFitNFobKAJvHqBLH7qqHbQgLYMb
usbCbTQ+4+T2PLTuv+QwLl5zhX+lQTx1wy/yeRRTA46N4gNDRsMok9mHimKU
RUb1h9oNDZvI77uhIfanZQGgtgUo+soTH+3ylvBUDp3CxDMZcucejjDIWaIl
jXr8jXL4TfZbglKE4HLdTwyrWkoPL17Cl+bO9dKxhIkw7HlnQRqKN1tHNJUj
2THiotmzCj9xtqvJefOzkZ0RAt1gzmPuAC7Kv/lfm+jwmCq4hAblnVjAXCtp
KdQ84do/lCFiERVM3mFV8DpZMGWe0R2tE4b3OKOe3JD3+awkaxDOVk31CZzC
vtsN82IcE9guXN6J3J0WcpbY6wwNX5Sq+OpXW6bU4qQNZfooW/mEFvWJXp0x
3/eJayZHeeo1TO7c7LNdoUNAqe0KUK21opBmX+E6J5LNwHh+57J9Kw/HuyxO
CiwJXFhVklPO7Yh+KCS8hVV05LOPCvs3DpY5BYw/tgZ2+tnr7LR/XtLW7gGa
D6PTiX8XGamzkZEM5hva2d1R+sbGOVOqF2aRS+aE8lG1aV3sj7cKkJXHUFLD
fuO+rUYIgQhyfB/Oyzplnhq6n2zCg95IIxYRErsI8Z8c2i2F8mPUCdeCYSJ7
1OaWhp7LDvgkDKHkUGUhJMAce05hDBDExseBi3enCyddesQFDfXdklZYRh3I
FjraUfCMspOI+hGXVNUj0oPOj6knKmjHEYummJvKgCVGPZKe7WMtiXPXjd9G
aMQqy1UDALn0JcplzOf7thNfZ7D6Ud+anRtMXUIFbydM7oDkOVECQSL5BNEP
NsJXikZ+CMXN80RcNCmmVXr7IiwLwa/YNNcM9e6JlEuelic4r+0132dnthcy
WlcCG0OLUjl+CdGy20KGCA6WjBFoqYqofUDy/3r2c5y7P38QF7chH1e6j0fv
GrLLrwpPWLlsbUWp9Y5zEz7i2v++paFDIc1flFPyijC4dz/jl+s/AkIz0pKd
n6TPBA3fv7sG2uphnwBiQP0NsLhIJcRdLCobGLU4AxJMeMEYKRjuL+WfT8gz
cG5SQJE1MSjN4j7hlJad3zoFATN7BeV/PC6AyxZF51utC9zDUtwXQ4DZ/68j
xK/izx+efjRlpIfG9+6+3Shcdt937Hd6sFg9PXtT+OLJ/vyAyaSfG61SDnYH
egTcX3Y6lLhO5CiaHhcwcRYiIgkuKxggq8xnt4zvL34kNoTKwItN02F5/ruU
a7ps2SjB2N2wAM0jRZO1mTJ7WtTlR99gtTIBWUCiBzeHa6clVBivs/uD5GOj
xiR986/xsU3B2gIq3EcGTgyP43wdOoou1/I7ozHnh5mZMXf8aDqnf+WHlSKc
LOUHSVwM9uEXIOI6SUuBmjO61rQLZXiD68H/FaCWCm8Toj+TKDwCcYSWi653
le1OUqmd+ooTnReRvMSqReamR1GAq4rn3Cb6HCvZVtLj3RVoz/SUAG3s+u0b
vm91dzsebWs9hZXoHxPA6gNfLEh8blUWaQQJytBj7x5gKccPcqhezw/tmw+m
YRcaocwAbmMH9GuftMaTFCqDJ/sKqM+xJPXqYy9bNns9w3mptWqIKehvtP2d
+tCuOLQ/3DOYM2U/6MxDO5HXs54uldo1TPZB5ldwsH5QpD+Pti5CbKgQbAGa
EhdUeIpL0EYid2yYYKxLFeG6/WnYnc+XBaBUEC5/BZCQHHWAFsoDsunEVbDU
OO9NJtAlz6NFcwT1vB1x0cmo5TgsPrZ+kCFf5Yemnu66S3XSXV7FoiXD7BuV
QsoZ/jac8n3SzkqHcApKreCSvPIKtpuTGlOGuAKZFaRviqX4JtiRkjZEajgJ
o/H3+1mIpbeXxg/jvsU++QseV7y+k0OdhxUq+m53Tute63nRDNsWpIvZvV5i
ThLhazlTEDqu8/2VXjm1lo+u6jtz2D9hkrXhfQW9RCWVjgvcwvZfTygF8BT/
1zpVrIS38zE70kQHOfM0HXd5/rUD
</p>

<h1 id="root">Root</h1>
<p class="secret">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
</p>]]></content><author><name></name></author><category term="htb" /><category term="machine" /><category term="easy" /><summary type="html"><![CDATA[This machine is made by FisMatHack and was released on the 10th of August 2024.]]></summary></entry><entry><title type="html">HTB - GrandMonty</title><link href="http://localhost:4000/2024/08/09/htb-grandmonty.html" rel="alternate" type="text/html" title="HTB - GrandMonty" /><published>2024-08-09T00:00:00+02:00</published><updated>2024-08-09T00:00:00+02:00</updated><id>http://localhost:4000/2024/08/09/htb-grandmonty</id><content type="html" xml:base="http://localhost:4000/2024/08/09/htb-grandmonty.html"><![CDATA[<p><a href="https://app.hackthebox.com/challenges/GrandMonty">The challenge</a> is made by Rayhan0x01 &amp; makelaris.</p>

<p>To start, submit the given “encryption ID” to access the chat: <code class="language-plaintext highlighter-rouge">1f81b076-fffc-45cd-b7c3-c686b73aa6af</code></p>

<h2 id="lfi">LFI</h2>
<p>The <code class="language-plaintext highlighter-rouge">/files/:file</code> endpoint accepts a parameter that gets url-decoded, which allows to traverse directories and read any file on the system, including the app source code:</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s1">'http://$TARGET/files/%2e%2e%2f%2e%2e%2f%2e%2e%2fetc%2fpasswd'</span>
curl <span class="s1">'http://$TARGET/files/%2e%2e%2findex.js'</span>
</code></pre></div></div>

<p>Here is the vulnerable endpoint in <code class="language-plaintext highlighter-rouge">routes/index.js</code>:</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">router</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">/files/:file</span><span class="dl">'</span><span class="p">,</span> <span class="k">async </span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
	<span class="kd">const</span> <span class="p">{</span> <span class="nx">file</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span>
	<span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nf">sendFile</span><span class="p">(</span><span class="nx">path</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="dl">'</span><span class="s1">/../uploads</span><span class="dl">'</span><span class="p">,</span> <span class="nx">file</span><span class="p">));</span>
<span class="p">});</span>
</code></pre></div></div>

<p>And the recovered file structure:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>├── bot.js
├── database.js
├── index.js
├── package.json
├── helpers
│   ├── DecryptorHelper.js
│   ├── GraphqlHelper.js
│   └── JWTHelper.js
├── middleware
│   ├── AdminMiddleware.js
│   └── PublicMiddleware.js
├── routes
│   └── index.js
├── static
│   └── js
│       ├── admin.js
│       ├── home.js
│       ├── index.js
└── views
    ├── auth.html
    ├── index.html
    └── messages.html
</code></pre></div></div>

<p>We can even run and test the app locally now:</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">--rm</span> <span class="nt">--name</span> db <span class="nt">-p</span> 3306:3306 <span class="nt">--rm</span> <span class="nt">-d</span> <span class="se">\</span>
  <span class="nt">-e</span> <span class="nv">MYSQL_USER</span><span class="o">=</span>monty <span class="nt">-e</span> <span class="nv">MYSQL_PASSWORD</span><span class="o">=</span>burns0x01 <span class="nt">-e</span> <span class="nv">MYSQL_DATABASE</span><span class="o">=</span>grandmonty <span class="se">\</span>
  mariadb
npm i
node index.js
</code></pre></div></div>

<h2 id="sqli">SQLi</h2>
<p>The <code class="language-plaintext highlighter-rouge">database.js</code> file includes a fake flag, but indicates that the real one is stored as <code class="language-plaintext highlighter-rouge">burns</code>’ password in the MySQL database.
Obviously we can’t read the raw database files using the LFI, it would be too easy !</p>

<p>But this file also contains a function called by the <code class="language-plaintext highlighter-rouge">RansomChat</code> GraphQL query, that is vulnerable to SQLi, but accessible only from <code class="language-plaintext highlighter-rouge">127.0.0.1</code>:</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/* helpers/GraphqlHelper.js */</span>
<span class="nx">RansomChat</span><span class="p">:</span> <span class="p">{</span>
    <span class="c1">// ...</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nc">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">if </span><span class="p">(</span><span class="o">!</span><span class="nf">isLocal</span><span class="p">(</span><span class="nx">request</span><span class="p">))</span> <span class="k">return</span> <span class="nf">reject</span><span class="p">(</span><span class="k">new</span> <span class="nc">GraphQLError</span><span class="p">(</span><span class="dl">'</span><span class="s1">Only localhost is allowed this query!</span><span class="dl">'</span><span class="p">));</span>
        <span class="nx">db</span><span class="p">.</span><span class="nf">getRansomChat</span><span class="p">(</span><span class="nx">enc_id</span><span class="p">)</span>
        <span class="c1">// ...</span>
    <span class="p">});</span>
    <span class="c1">// ...</span>
<span class="p">},</span>

<span class="cm">/* database.js */</span>
<span class="k">async</span> <span class="nf">getRansomChat</span><span class="p">(</span><span class="nx">enc_id</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nc">Promise</span><span class="p">(</span><span class="k">async </span><span class="p">(</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="kd">let</span> <span class="nx">stmt</span> <span class="o">=</span> <span class="s2">`SELECT * FROM ransom_chat WHERE enc_id = '</span><span class="p">${</span><span class="nx">enc_id</span><span class="p">}</span><span class="s2">'`</span><span class="p">;</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">connection</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="nx">stmt</span><span class="p">,</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">result</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
            <span class="c1">// ...</span>
        <span class="p">})</span>
    <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="xs-leak">XS-Leak</h2>
<p>CSP includes <code class="language-plaintext highlighter-rouge">script-src 'self'</code> which makes it possible to get XSS if we can upload a file on the system.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/* index.js */</span>
<span class="c1">// almighty bonk</span>
<span class="nx">app</span><span class="p">.</span><span class="nf">use</span><span class="p">(</span><span class="nf">function </span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">res</span><span class="p">.</span><span class="nf">setHeader</span><span class="p">(</span>
        <span class="dl">'</span><span class="s1">Content-Security-Policy</span><span class="dl">'</span><span class="p">,</span>
        <span class="s2">`default-src 'none'; script-src 'self'; style-src 'self' fonts.googleapis.com; font-src fonts.gstatic.com; img-src 'self'; form-action 'self'; base-uri 'none'; connect-src 'self';`</span>
    <span class="p">);</span>
    <span class="nf">next</span><span class="p">();</span>
<span class="p">});</span>
</code></pre></div></div>

<p>Unluckily the upload feature is not implemented.
The <code class="language-plaintext highlighter-rouge">express-fileupload</code> package that’s used could be interesting but it is configured not to write temporary files to disk so it’s useless to us.
No upload, no XSS.</p>

<p>But we can still use the good ol’ <code class="language-plaintext highlighter-rouge">&lt;meta&gt;</code> trick to redirect the victim to a malicious page we host:</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"refresh"</span> <span class="na">content=</span><span class="s">"0; url=http://zanymonk.github.io/"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p>Chromium will disallow the script running on this page to access data from queries to the challenge’s domain, or to its loopback address. This makes it impossible to extract the flag in one go, using an Error-based SQLi for exemple.</p>

<p>However, it can still query these domains, and compute the time it takes to get a response. We’ll exploit the SQLi blindly, and detect an evantual <code class="language-plaintext highlighter-rouge">sleep(1)</code> using the <a href="https://developer.mozilla.org/fr/docs/Web/API/Performance/now">Performance API</a>:</p>
<p class="secret">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
</p>]]></content><author><name></name></author><category term="htb" /><category term="challenge" /><category term="web" /><category term="medium" /><summary type="html"><![CDATA[The challenge is made by Rayhan0x01 &amp; makelaris.]]></summary></entry></feed>